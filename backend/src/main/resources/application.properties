spring.application.name=backend

# Server configuration
server.port=${PORT:8080}

# Actuator endpoints for health checks (Docker + Render)
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized
management.health.probes.enabled=true

# Docker/Container optimizations
server.tomcat.threads.max=50
server.tomcat.threads.min-spare=10

# ==============================================
# SUPABASE POSTGRESQL DATABASE
# ==============================================
# Database configuration is handled by DatabaseConfig.java
# This correctly parses Supabase DATABASE_URL format (postgresql://)
# and converts it to JDBC format (jdbc:postgresql://)

# Local development fallback
spring.datasource.url=jdbc:postgresql://localhost:5432/dermatrack
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate settings for PostgreSQL
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Connection Pool Settings (optimiert f√ºr Render Free Tier)
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000

# Logging
logging.level.org.springframework.web=INFO
logging.level.de.dermatrack=DEBUG
logging.level.org.hibernate.SQL=WARN
