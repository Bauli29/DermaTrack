name: Full CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      backend: ${{ steps.filter.outputs.backend }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          frontend:
            - 'frontend/**'
          backend:
            - 'backend/**'

  frontend-test:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Lint code
      run: |
        cd frontend
        npm run lint
        
    # TODO: Add tests when implemented
    # - name: Run tests
    #   run: |
    #     cd frontend
    #     npm run test:ci
        
    - name: Build application
      run: |
        cd frontend
        npm run build

  backend-test:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    
    # TODO: Add PostgreSQL service when tests are implemented
    # services:
    #   postgres:
    #     image: postgres:13
    #     env:
    #       POSTGRES_PASSWORD: postgres
    #       POSTGRES_DB: dermatrack_test
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5
    #     ports:
    #       - 5432:5432
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '25'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('backend/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-
        
        # TODO: Enable tests once implemented
        # - name: Run tests
        #   run: |
        #     cd backend
        #     ./mvnw test
        #   env:
        #     SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/dermatrack_test
        #     SPRING_DATASOURCE_USERNAME: postgres
        #     SPRING_DATASOURCE_PASSWORD: postgres
        #     SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
        
    - name: Build application
      run: |
        cd backend
        ./mvnw clean package -DskipTests