name: Backend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('backend/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-
          
    # TODO: Enable code quality checks once configured
    # - name: Run static analysis (Checkstyle)
    #   run: ./mvnw checkstyle:check
    #
    # - name: Run security analysis (SpotBugs)
    #   run: ./mvnw spotbugs:check
    #
    # - name: Run dependency analysis
    #   run: ./mvnw dependency-check:check
        
    # TODO: Enable tests once test structure and database config is ready
    # - name: Run unit tests
    #   run: ./mvnw test
    #
    # - name: Run integration tests
    #   run: ./mvnw verify -P integration-tests
    #   env:
    #     SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/dermatrack_test
    #     SPRING_DATASOURCE_USERNAME: postgres
    #     SPRING_DATASOURCE_PASSWORD: postgres
    #     SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
        
    - name: Build application (Maven)
      run: ./mvnw clean package -DskipTests
      
    - name: Build Docker image (verification)
      run: docker build -t dermatrack-backend:ci-test .
      
    # NOTE: Deployment handled automatically by Render via Dashboard integration
    # Render builds and deploys Docker image automatically on git push to main branch
        